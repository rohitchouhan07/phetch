#!/bin/sh
# A newbie's attempt at making a shell script, a lot needs to be learnt and improved

#getting all the useful information

#get host name
hostname=$(cat /proc/sys/kernel/hostname)

#get OS name
#sourcing the file for easily getting the distribution name
. /etc/os-release
os=$PRETTY_NAME

#get shell
shell=$SHELL

#get RAM usage
mem=$(free -m | awk '/^Mem/ {print $3"M / "$2"M"}') 

#get packages installed (thanks to nerdfetch for this implementation)
#this is the most expensive operation in terms of time, the goal is to get this working faster.

pkgs=$(which nix-env yum dnf rpm apt brew port zypper pacman xbps-query pkg emerge cave apk kiss brl yay cpm eopkg 2>/dev/null)
pkgs=${pkgs##*/}
case $pkgs in
	cpm) packages="$(cpm C)";;
	brew) packages="$(brew list --formula | wc -l)";;
	port) packages="$(port installed | tot)";;
	apt) packages="$(dpkg-query -f '${binary:Package}\n' -W | wc -l)";;
	rpm) packages="$(rpm -qa --last| wc -l)";;
	yum) packages="$(yum list installed | wc -l)";;
	dnf) packages="$(dnf list installed | wc -l)";;
	zypper) packages="$(zypper se | wc -l)";;
	pacman) packages="$(pacman -Q | wc -l)";;
	yay) packages="$(yay -Q | wc -l)";;
	kiss) packages="$(kiss list | wc -l)";;
	pkg|emerge) packages="$(qlist -I | wc -l)";;
	cave) packages="$(cave show installed-slots | wc -l)";;
	xbps-query) packages="$(xbps-query -l | wc -l)";;
	nix-env) packages="$(nix-store -q --requisites /run/current-system/sw | wc -l)";;
	apk) packages="$(apk list --installed | wc -l)";;
	brl) packages="$(brl list | wc -l)";;
	eopkg) packages="$(eopkg li | wc -l)";;
	*) packages="idk"
esac

#get kernel version
kernel=$(uname -r)

#get uptime (need to fix the spacing issue here)
time=$(uptime -p)
time="${time##up}"

#define colors (thanks to nerdfetch and ufetch)

bold='[1m'
black='[30m'
red='[31m'
green='[32m'
yellow='[38;2;255;217;15m'
blue='[34m'
magenta='[35m'
cyan='[36m'
white='[37m'
grey='[90m'
reset='[0m'
teal='[38;2;0;255;191m'


#Delimiter (feel free to change this)
delimiter=${cyan}'~'${reset}

#printing the ascii art and data

cat <<-EOF
 ${yellow}|\/\/\/|${reset}
 ${yellow}|      |${reset}   ${teal}OS${reset}     $delimiter $os
 ${yellow}|      |${reset}   ${teal}host${reset}   $delimiter $hostname
 ${yellow}| (o)(o)${reset}   ${teal}shell${reset}  $delimiter ${shell##*/}
 ${yellow}C      _)${reset}  ${teal}pkgs${reset}   $delimiter $packages
 ${yellow} | ,___|${reset}   ${teal}kernel${reset} $delimiter $kernel
 ${yellow} |   /${reset}     ${teal}memory${reset} $delimiter $mem
 ${yellow}/____\\${reset}     ${teal}uptime${reset} $delimiter ${time#${time%%[![:space:]]*}}
${yellow}/      \\${reset}

EOF

